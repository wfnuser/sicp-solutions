(define (make-account balance password max-wrong-times)
    (let ((consecutive-wrong-times 0))
        (define (withdraw amount) 
            (if (>= balance amount) 
                (begin (set! balance (- balance amount)) balance)
                "Insufficient funds")) 
        (define (deposit amount)
            (set! balance (+ balance amount)) balance)
        (define (dispatch pw m)
            (if (not (eq? pw password))
                (begin (set! consecutive-wrong-times (+ consecutive-wrong-times 1))
                    (if (>= consecutive-wrong-times max-wrong-times)
                        (error "Call the cops")
                    )
                    (error "Incorrect password"))
                (begin (set! consecutive-wrong-times 0))
            )
            (cond ((eq? m 'withdraw) withdraw)
                ((eq? m 'deposit) deposit)
                (else (error "Unknown request: MAKE-ACCOUNT" m))))
        dispatch
    )
)

(define acc (make-account 100 'secret-password 3))
((acc 'secret-password 'withdraw) 40)
((acc 'secret-password 'withdraw) 20)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'secret-password 'deposit) 20)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'secret-password 'withdraw) 10)
